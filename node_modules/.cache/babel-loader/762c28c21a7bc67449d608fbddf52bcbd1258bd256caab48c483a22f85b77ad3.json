{"ast":null,"code":"var _jsxFileName = \"/home/indrajeetyadav/my-spreadsheet/src/components/Toolbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = () => {\n  _s();\n  const {\n    setColumnRule\n  } = useSpreadsheet();\n  const [showDropdown, setShowDropdown] = useState(false);\n  const columns = Array.from({\n    length: 26\n  }, (_, i) => String.fromCharCode(65 + i));\n  const handleCheckboxChange = (column, event) => {\n    const isChecked = event.target.checked;\n    setColumnRule(column, isChecked ? 'numeric' : 'text');\n    alert(`Column ${column} is now ${isChecked ? 'accepting only numeric values.' : 'allowing any values.'}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative p-4 border-b border-gray-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowDropdown(!showDropdown),\n      className: \"bg-blue-500 text-white p-2 rounded\",\n      children: \"Set Numeric Columns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-white border rounded shadow-md p-2 mt-2 z-10\",\n      children: columns.map(col => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `numeric-${col}`,\n          onChange: e => handleCheckboxChange(col, e),\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `numeric-${col}`,\n          children: col\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, col, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Toolbar, \"pLiLlkU/Z2m1gSvUbhNcy6PhE4Q=\", false, function () {\n  return [useSpreadsheet];\n});\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","useState","useSpreadsheet","jsxDEV","_jsxDEV","Toolbar","_s","setColumnRule","showDropdown","setShowDropdown","columns","Array","from","length","_","i","String","fromCharCode","handleCheckboxChange","column","event","isChecked","target","checked","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","col","type","id","onChange","e","htmlFor","_c","$RefreshReg$"],"sources":["/home/indrajeetyadav/my-spreadsheet/src/components/Toolbar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\n\nconst Toolbar = () => {\n  const { setColumnRule } = useSpreadsheet();\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const columns = Array.from({ length: 26 }, (_, i) => String.fromCharCode(65 + i));\n\n  const handleCheckboxChange = (column, event) => {\n    const isChecked = event.target.checked;\n    setColumnRule(column, isChecked ? 'numeric' : 'text');\n    alert(`Column ${column} is now ${isChecked ? 'accepting only numeric values.' : 'allowing any values.'}`);\n  };\n\n  return (\n    <div className=\"relative p-4 border-b border-gray-300\">\n      <button\n        onClick={() => setShowDropdown(!showDropdown)}\n        className=\"bg-blue-500 text-white p-2 rounded\"\n      >\n        Set Numeric Columns\n      </button>\n      {showDropdown && (\n        <div className=\"absolute bg-white border rounded shadow-md p-2 mt-2 z-10\">\n          {columns.map((col) => (\n            <div key={col} className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id={`numeric-${col}`}\n                onChange={(e) => handleCheckboxChange(col, e)}\n                className=\"mr-2\"\n              />\n              <label htmlFor={`numeric-${col}`}>{col}</label>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Toolbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAc,CAAC,GAAGL,cAAc,CAAC,CAAC;EAC1C,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMS,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKC,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGF,CAAC,CAAC,CAAC;EAEjF,MAAMG,oBAAoB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IAC9C,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,OAAO;IACtChB,aAAa,CAACY,MAAM,EAAEE,SAAS,GAAG,SAAS,GAAG,MAAM,CAAC;IACrDG,KAAK,CAAC,UAAUL,MAAM,WAAWE,SAAS,GAAG,gCAAgC,GAAG,sBAAsB,EAAE,CAAC;EAC3G,CAAC;EAED,oBACEjB,OAAA;IAAKqB,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACpDtB,OAAA;MACEuB,OAAO,EAAEA,CAAA,KAAMlB,eAAe,CAAC,CAACD,YAAY,CAAE;MAC9CiB,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EAC/C;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRvB,YAAY,iBACXJ,OAAA;MAAKqB,SAAS,EAAC,0DAA0D;MAAAC,QAAA,EACtEhB,OAAO,CAACsB,GAAG,CAAEC,GAAG,iBACf7B,OAAA;QAAeqB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC1CtB,OAAA;UACE8B,IAAI,EAAC,UAAU;UACfC,EAAE,EAAE,WAAWF,GAAG,EAAG;UACrBG,QAAQ,EAAGC,CAAC,IAAKnB,oBAAoB,CAACe,GAAG,EAAEI,CAAC,CAAE;UAC9CZ,SAAS,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACF3B,OAAA;UAAOkC,OAAO,EAAE,WAAWL,GAAG,EAAG;UAAAP,QAAA,EAAEO;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPvCE,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CArCID,OAAO;EAAA,QACeH,cAAc;AAAA;AAAAqC,EAAA,GADpClC,OAAO;AAuCb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}