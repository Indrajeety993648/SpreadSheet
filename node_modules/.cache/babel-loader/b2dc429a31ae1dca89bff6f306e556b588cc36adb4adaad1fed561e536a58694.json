{"ast":null,"code":"var _jsxFileName = \"/home/indrajeetyadav/my-spreadsheet/src/components/Toolbar.js\",\n  _s = $RefreshSig$();\n// components/Toolbar.js\nimport React from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = () => {\n  _s();\n  const {\n    formatCell\n  } = useSpreadsheet();\n  const handleFormatChange = (property, value) => {\n    formatCell(property, value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 p-2 flex space-x-2 items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-l border-gray-300 h-6 mx-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleFormatChange('fontWeight', e.target.value),\n      className: \"bg-white border border-gray-300 rounded px-2 py-1 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"normal\",\n        children: \"Normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"bold\",\n        children: \"Bold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleFormatChange('fontStyle', e.target.value),\n      className: \"bg-white border border-gray-300 rounded px-2 py-1 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"normal\",\n        children: \"Normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"italic\",\n        children: \"Italic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleFormatChange('textAlign', e.target.value),\n      className: \"bg-white border border-gray-300 rounded px-2 py-1 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"left\",\n        children: \"Align Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"center\",\n        children: \"Align Center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"right\",\n        children: \"Align Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Toolbar, \"V5T2GBrXvsslReMQZ5rkfw3Pk6w=\", false, function () {\n  return [useSpreadsheet];\n});\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","useSpreadsheet","jsxDEV","_jsxDEV","Toolbar","_s","formatCell","handleFormatChange","property","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/indrajeetyadav/my-spreadsheet/src/components/Toolbar.js"],"sourcesContent":["// components/Toolbar.js\nimport React from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\n\nconst Toolbar = () => {\n  const { formatCell } = useSpreadsheet();\n\n  const handleFormatChange = (property, value) => {\n    formatCell(property, value);\n  };\n\n  return (\n    <div className=\"bg-gray-100 p-2 flex space-x-2 items-center\">\n      <div className=\"border-l border-gray-300 h-6 mx-2\"></div>\n      <select \n        onChange={(e) => handleFormatChange('fontWeight', e.target.value)} \n        className=\"bg-white border border-gray-300 rounded px-2 py-1 text-sm\"\n      >\n        <option value=\"normal\">Normal</option>\n        <option value=\"bold\">Bold</option>\n      </select>\n      <select \n        onChange={(e) => handleFormatChange('fontStyle', e.target.value)}\n        className=\"bg-white border border-gray-300 rounded px-2 py-1 text-sm\"\n      >\n        <option value=\"normal\">Normal</option>\n        <option value=\"italic\">Italic</option>\n      </select>\n      <select \n        onChange={(e) => handleFormatChange('textAlign', e.target.value)}\n        className=\"bg-white border border-gray-300 rounded px-2 py-1 text-sm\"\n      >\n        <option value=\"left\">Align Left</option>\n        <option value=\"center\">Align Center</option>\n        <option value=\"right\">Align Right</option>\n      </select>\n    </div>\n  );\n};\n\nexport default Toolbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}