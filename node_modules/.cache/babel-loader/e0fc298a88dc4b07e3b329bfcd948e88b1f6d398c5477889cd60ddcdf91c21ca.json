{"ast":null,"code":"var _jsxFileName = \"/home/indrajeetyadav/my-spreadsheet/src/components/Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 100;\nconst COLS = 26;\nconst Grid = () => {\n  _s();\n  const {\n    cells,\n    updateCell,\n    searchTerm\n  } = useSpreadsheet();\n  const [selectedCell, setSelectedCell] = useState(null);\n  const gridRef = useRef(null);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (selectedCell && !e.ctrlKey && !e.metaKey) {\n        const [row, col] = selectedCell;\n        switch (e.key) {\n          case 'ArrowUp':\n            setSelectedCell([Math.max(0, row - 1), col]);\n            break;\n          case 'ArrowDown':\n            setSelectedCell([Math.min(ROWS - 1, row + 1), col]);\n            break;\n          case 'ArrowLeft':\n            setSelectedCell([row, Math.max(0, col - 1)]);\n            break;\n          case 'ArrowRight':\n            setSelectedCell([row, Math.min(COLS - 1, col + 1)]);\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [selectedCell]);\n  const getCellId = (row, col) => `${String.fromCharCode(65 + col)}${row + 1}`;\n  const renderCell = (row, col) => {\n    const cellId = getCellId(row, col);\n    const isSelected = selectedCell && selectedCell[0] === row && selectedCell[1] === col;\n    const cellData = cells[cellId] || {\n      value: '',\n      style: {}\n    };\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: `border border-gray-300 p-1 ${isSelected ? 'bg-blue-100' : ''}`,\n      onClick: () => setSelectedCell([row, col]),\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: cellData.value,\n        onChange: e => updateCell(cellId, {\n          value: e.target.value\n        }),\n        className: \"w-full outline-none bg-transparent resize-none overflow-hidden\",\n        style: {\n          ...cellData.style,\n          minHeight: '30px'\n        },\n        rows: 1,\n        onInput: e => {\n          e.target.style.height = 'auto';\n          e.target.style.height = e.target.scrollHeight + 'px';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, cellId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n  const renderColumnHeaders = () => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      className: \"sticky top-0 left-0 z-10 bg-gray-100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), Array.from({\n      length: COLS\n    }, (_, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n      className: \"sticky top-0 z-10 bg-gray-100 text-center py-2 px-4\",\n      children: String.fromCharCode(65 + i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n  const filteredCells = Object.entries(cells).filter(([cellId, cellData]) => cellData.value.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-auto h-full\",\n    ref: gridRef,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"border-collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: renderColumnHeaders()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.from({\n          length: ROWS\n        }, (_, row) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sticky left-0 z-10 bg-gray-100 text-center py-1 px-2\",\n            children: row + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), Array.from({\n            length: COLS\n          }, (_, col) => renderCell(row, col))]\n        }, row, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"vtWtdJzkEN5ZhoJI2h6dIBfn6Uw=\", false, function () {\n  return [useSpreadsheet];\n});\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useSpreadsheet","jsxDEV","_jsxDEV","ROWS","COLS","Grid","_s","cells","updateCell","searchTerm","selectedCell","setSelectedCell","gridRef","handleKeyDown","e","ctrlKey","metaKey","row","col","key","Math","max","min","window","addEventListener","removeEventListener","getCellId","String","fromCharCode","renderCell","cellId","isSelected","cellData","value","style","className","onClick","children","onChange","target","minHeight","rows","onInput","height","scrollHeight","fileName","_jsxFileName","lineNumber","columnNumber","renderColumnHeaders","Array","from","length","_","i","filteredCells","Object","entries","filter","toLowerCase","includes","ref","_c","$RefreshReg$"],"sources":["/home/indrajeetyadav/my-spreadsheet/src/components/Grid.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\n\nconst ROWS = 100;\nconst COLS = 26;\n\nconst Grid = () => {\n  const { cells, updateCell, searchTerm } = useSpreadsheet();\n  const [selectedCell, setSelectedCell] = useState(null);\n  const gridRef = useRef(null);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (selectedCell && !e.ctrlKey && !e.metaKey) {\n        const [row, col] = selectedCell;\n        switch (e.key) {\n          case 'ArrowUp':\n            setSelectedCell([Math.max(0, row - 1), col]);\n            break;\n          case 'ArrowDown':\n            setSelectedCell([Math.min(ROWS - 1, row + 1), col]);\n            break;\n          case 'ArrowLeft':\n            setSelectedCell([row, Math.max(0, col - 1)]);\n            break;\n          case 'ArrowRight':\n            setSelectedCell([row, Math.min(COLS - 1, col + 1)]);\n            break;\n          default:\n            break;\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [selectedCell]);\n\n  const getCellId = (row, col) => `${String.fromCharCode(65 + col)}${row + 1}`;\n\n  const renderCell = (row, col) => {\n    const cellId = getCellId(row, col);\n    const isSelected = selectedCell && selectedCell[0] === row && selectedCell[1] === col;\n    const cellData = cells[cellId] || { value: '', style: {} };\n\n    return (\n      <td\n        key={cellId}\n        className={`border border-gray-300 p-1 ${isSelected ? 'bg-blue-100' : ''}`}\n        onClick={() => setSelectedCell([row, col])}\n      >\n        <textarea\n          value={cellData.value}\n          onChange={(e) => updateCell(cellId, { value: e.target.value })}\n          className=\"w-full outline-none bg-transparent resize-none overflow-hidden\"\n          style={{ ...cellData.style, minHeight: '30px' }}\n          rows={1}\n          onInput={(e) => {\n            e.target.style.height = 'auto';\n            e.target.style.height = e.target.scrollHeight + 'px';\n          }}\n        />\n      </td>\n    );\n  };\n\n  const renderColumnHeaders = () => (\n    <tr>\n      <th className=\"sticky top-0 left-0 z-10 bg-gray-100\"></th>\n      {Array.from({ length: COLS }, (_, i) => (\n        <th key={i} className=\"sticky top-0 z-10 bg-gray-100 text-center py-2 px-4\">\n          {String.fromCharCode(65 + i)}\n        </th>\n      ))}\n    </tr>\n  );\n\n  const filteredCells = Object.entries(cells).filter(([cellId, cellData]) => \n    cellData.value.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"overflow-auto h-full\" ref={gridRef}>\n      <table className=\"border-collapse\">\n        <thead>{renderColumnHeaders()}</thead>\n        <tbody>\n          {Array.from({ length: ROWS }, (_, row) => (\n            <tr key={row}>\n              <th className=\"sticky left-0 z-10 bg-gray-100 text-center py-1 px-2\">{row + 1}</th>\n              {Array.from({ length: COLS }, (_, col) => renderCell(row, col))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Grid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}