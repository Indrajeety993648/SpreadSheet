{"ast":null,"code":"var _jsxFileName = \"/home/indrajeetyadav/my-spreadsheet/src/components/Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 100;\nconst COLS = 26;\nconst Grid = () => {\n  _s();\n  const {\n    cells,\n    updateCell,\n    setColumnRule,\n    columnRules\n  } = useSpreadsheet();\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const gridRef = useRef(null);\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (selectedCell && !e.ctrlKey && !e.metaKey) {\n        const [row, col] = selectedCell;\n        switch (e.key) {\n          case 'ArrowUp':\n            setSelectedCell([Math.max(0, row - 1), col]);\n            break;\n          case 'ArrowDown':\n            setSelectedCell([Math.min(ROWS - 1, row + 1), col]);\n            break;\n          case 'ArrowLeft':\n            setSelectedCell([row, Math.max(0, col - 1)]);\n            break;\n          case 'ArrowRight':\n            setSelectedCell([row, Math.min(COLS - 1, col + 1)]);\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [selectedCell]);\n  const getCellId = (row, col) => `${String.fromCharCode(65 + col)}${row + 1}`;\n  const handleCellChange = (cellId, value) => {\n    const col = cellId.charAt(0);\n    if (columnRules[col] === 'numeric' && !/^\\d*\\.?\\d*$/.test(value)) {\n      return;\n    }\n    updateCell(cellId, {\n      value\n    });\n  };\n  const handleCheckboxChange = (column, isChecked) => {\n    if (isChecked) {\n      setColumnRule(column, 'numeric');\n    } else {\n      setColumnRule(column, 'text'); // Allow any value if unchecked\n    }\n  };\n  const renderCell = (row, col) => {\n    const cellId = getCellId(row, col);\n    const isSelected = selectedCell && selectedCell[0] === row && selectedCell[1] === col;\n    const isHovered = hoveredCell && hoveredCell[0] === row && hoveredCell[1] === col;\n    const cellData = cells[cellId] || {\n      value: '',\n      style: {},\n      type: 'text'\n    };\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      className: `border border-gray-300 p-1 ${isSelected ? 'bg-blue-100' : ''} ${isHovered ? 'border-gray-500' : ''}`,\n      onClick: () => setSelectedCell([row, col]),\n      onMouseEnter: () => setHoveredCell([row, col]),\n      onMouseLeave: () => setHoveredCell(null),\n      style: {\n        minWidth: '100px',\n        minHeight: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: cellData.value,\n        onChange: e => handleCellChange(cellId, e.target.value),\n        className: \"w-full h-full outline-none bg-transparent resize-none overflow-hidden\",\n        style: {\n          ...cellData.style,\n          minHeight: '30px'\n        },\n        rows: 1,\n        onInput: e => {\n          e.target.style.height = 'auto';\n          e.target.style.height = e.target.scrollHeight + 'px';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, cellId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n  const renderColumnHeaders = () => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      className: \"sticky top-0 left-0 z-10 bg-gray-100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), Array.from({\n      length: COLS\n    }, (_, i) => {\n      const column = String.fromCharCode(65 + i);\n      const isChecked = columnRules[column] === 'numeric';\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"sticky top-0 z-10 bg-gray-100 text-center py-2 px-4\",\n        children: [column, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: e => handleCheckboxChange(column, e.target.checked),\n          className: \"ml-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-auto h-full\",\n    ref: gridRef,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"border-collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: renderColumnHeaders()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.from({\n          length: ROWS\n        }, (_, row) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"sticky left-0 z-10 bg-gray-100 text-center py-1 px-2\",\n            children: row + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), Array.from({\n            length: COLS\n          }, (_, col) => renderCell(row, col))]\n        }, row, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"26LfnotDUfTFrt+AkfBTUyVAEx8=\", false, function () {\n  return [useSpreadsheet];\n});\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useSpreadsheet","jsxDEV","_jsxDEV","ROWS","COLS","Grid","_s","cells","updateCell","setColumnRule","columnRules","selectedCell","setSelectedCell","hoveredCell","setHoveredCell","gridRef","handleKeyDown","e","ctrlKey","metaKey","row","col","key","Math","max","min","window","addEventListener","removeEventListener","getCellId","String","fromCharCode","handleCellChange","cellId","value","charAt","test","handleCheckboxChange","column","isChecked","renderCell","isSelected","isHovered","cellData","style","type","className","onClick","onMouseEnter","onMouseLeave","minWidth","minHeight","children","onChange","target","rows","onInput","height","scrollHeight","fileName","_jsxFileName","lineNumber","columnNumber","renderColumnHeaders","Array","from","length","_","i","checked","ref","_c","$RefreshReg$"],"sources":["/home/indrajeetyadav/my-spreadsheet/src/components/Grid.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\n\nconst ROWS = 100;\nconst COLS = 26;\n\nconst Grid = () => {\n  const { cells, updateCell, setColumnRule, columnRules } = useSpreadsheet();\n  const [selectedCell, setSelectedCell] = useState(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const gridRef = useRef(null);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (selectedCell && !e.ctrlKey && !e.metaKey) {\n        const [row, col] = selectedCell;\n        switch (e.key) {\n          case 'ArrowUp':\n            setSelectedCell([Math.max(0, row - 1), col]);\n            break;\n          case 'ArrowDown':\n            setSelectedCell([Math.min(ROWS - 1, row + 1), col]);\n            break;\n          case 'ArrowLeft':\n            setSelectedCell([row, Math.max(0, col - 1)]);\n            break;\n          case 'ArrowRight':\n            setSelectedCell([row, Math.min(COLS - 1, col + 1)]);\n            break;\n          default:\n            break;\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [selectedCell]);\n\n  const getCellId = (row, col) => `${String.fromCharCode(65 + col)}${row + 1}`;\n\n  const handleCellChange = (cellId, value) => {\n    const col = cellId.charAt(0);\n    if (columnRules[col] === 'numeric' && !/^\\d*\\.?\\d*$/.test(value)) {\n      return;\n    }\n    updateCell(cellId, { value });\n  };\n\n  const handleCheckboxChange = (column, isChecked) => {\n    if (isChecked) {\n      setColumnRule(column, 'numeric');\n    } else {\n      setColumnRule(column, 'text'); // Allow any value if unchecked\n    }\n  };\n\n  const renderCell = (row, col) => {\n    const cellId = getCellId(row, col);\n    const isSelected = selectedCell && selectedCell[0] === row && selectedCell[1] === col;\n    const isHovered = hoveredCell && hoveredCell[0] === row && hoveredCell[1] === col;\n    const cellData = cells[cellId] || { value: '', style: {}, type: 'text' };\n\n    return (\n      <td\n        key={cellId}\n        className={`border border-gray-300 p-1 ${isSelected ? 'bg-blue-100' : ''} ${isHovered ? 'border-gray-500' : ''}`}\n        onClick={() => setSelectedCell([row, col])}\n        onMouseEnter={() => setHoveredCell([row, col])}\n        onMouseLeave={() => setHoveredCell(null)}\n        style={{ minWidth: '100px', minHeight: '50px' }}\n      >\n        <textarea\n          value={cellData.value}\n          onChange={(e) => handleCellChange(cellId, e.target.value)}\n          className=\"w-full h-full outline-none bg-transparent resize-none overflow-hidden\"\n          style={{ ...cellData.style, minHeight: '30px' }}\n          rows={1}\n          onInput={(e) => {\n            e.target.style.height = 'auto';\n            e.target.style.height = e.target.scrollHeight + 'px';\n          }}\n        />\n      </td>\n    );\n  };\n\n  const renderColumnHeaders = () => (\n    <tr>\n      <th className=\"sticky top-0 left-0 z-10 bg-gray-100\"></th>\n      {Array.from({ length: COLS }, (_, i) => {\n        const column = String.fromCharCode(65 + i);\n        const isChecked = columnRules[column] === 'numeric';\n        return (\n          <th key={i} className=\"sticky top-0 z-10 bg-gray-100 text-center py-2 px-4\">\n            {column}\n            <input\n              type=\"checkbox\"\n              checked={isChecked}\n              onChange={(e) => handleCheckboxChange(column, e.target.checked)}\n              className=\"ml-2\"\n            />\n          </th>\n        );\n      })}\n    </tr>\n  );\n\n  return (\n    <div className=\"overflow-auto h-full\" ref={gridRef}>\n      <table className=\"border-collapse\">\n        <thead>{renderColumnHeaders()}</thead>\n        <tbody>\n          {Array.from({ length: ROWS }, (_, row) => (\n            <tr key={row}>\n              <th className=\"sticky left-0 z-10 bg-gray-100 text-center py-1 px-2\">{row + 1}</th>\n              {Array.from({ length: COLS }, (_, col) => renderCell(row, col))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Grid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}