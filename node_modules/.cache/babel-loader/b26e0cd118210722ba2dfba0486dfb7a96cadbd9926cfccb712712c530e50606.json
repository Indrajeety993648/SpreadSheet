{"ast":null,"code":"var _jsxFileName = \"/home/indrajeetyadav/my-spreadsheet/src/hooks/useSpreadsheet.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpreadsheetContext = /*#__PURE__*/createContext();\nexport const useSpreadsheet = () => {\n  _s();\n  return useContext(SpreadsheetContext);\n};\n_s(useSpreadsheet, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SpreadsheetProvider = ({\n  children\n}) => {\n  _s2();\n  const [cells, setCells] = useState({});\n  const [history, setHistory] = useState([]);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const updateCell = useCallback((cellId, updates) => {\n    setCells(prevCells => {\n      const newCells = {\n        ...prevCells,\n        [cellId]: {\n          ...prevCells[cellId],\n          ...updates\n        }\n      };\n      setHistory(prevHistory => [...prevHistory.slice(0, currentHistoryIndex + 1), newCells]);\n      setCurrentHistoryIndex(prevIndex => prevIndex + 1);\n      return newCells;\n    });\n  }, [currentHistoryIndex]);\n  const formatCell = useCallback((property, value) => {\n    setCells(prevCells => {\n      const newCells = {\n        ...prevCells\n      };\n      Object.keys(newCells).forEach(cellId => {\n        if (newCells[cellId].selected) {\n          newCells[cellId] = {\n            ...newCells[cellId],\n            style: {\n              ...newCells[cellId].style,\n              [property]: value\n            }\n          };\n        }\n      });\n      setHistory(prevHistory => [...prevHistory.slice(0, currentHistoryIndex + 1), newCells]);\n      setCurrentHistoryIndex(prevIndex => prevIndex + 1);\n      return newCells;\n    });\n  }, [currentHistoryIndex]);\n  const setColumnRule = useCallback((column, rule) => {\n    setCells(prevCells => {\n      const newCells = {\n        ...prevCells\n      };\n      Object.keys(newCells).forEach(cellId => {\n        if (cellId.startsWith(column)) {\n          newCells[cellId] = {\n            ...newCells[cellId],\n            validation: rule\n          };\n        }\n      });\n      setHistory(prevHistory => [...prevHistory.slice(0, currentHistoryIndex + 1), newCells]);\n      setCurrentHistoryIndex(prevIndex => prevIndex + 1);\n      return newCells;\n    });\n  }, [currentHistoryIndex]);\n  const undo = useCallback(() => {\n    if (currentHistoryIndex > 0) {\n      setCurrentHistoryIndex(prevIndex => prevIndex - 1);\n      setCells(history[currentHistoryIndex - 1]);\n    }\n  }, [currentHistoryIndex, history]);\n  const redo = useCallback(() => {\n    if (currentHistoryIndex < history.length - 1) {\n      setCurrentHistoryIndex(prevIndex => prevIndex + 1);\n      setCells(history[currentHistoryIndex + 1]);\n    }\n  }, [currentHistoryIndex, history]);\n  const value = {\n    cells,\n    updateCell,\n    formatCell,\n    undo,\n    redo,\n    searchTerm,\n    setSearchTerm,\n    setColumnRule\n  };\n  return /*#__PURE__*/_jsxDEV(SpreadsheetContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(SpreadsheetProvider, \"2N/RK6DkhErNivTHRcOIWK3Dkpg=\");\n_c = SpreadsheetProvider;\nvar _c;\n$RefreshReg$(_c, \"SpreadsheetProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","SpreadsheetContext","useSpreadsheet","_s","SpreadsheetProvider","children","_s2","cells","setCells","history","setHistory","currentHistoryIndex","setCurrentHistoryIndex","searchTerm","setSearchTerm","updateCell","cellId","updates","prevCells","newCells","prevHistory","slice","prevIndex","formatCell","property","value","Object","keys","forEach","selected","style","setColumnRule","column","rule","startsWith","validation","undo","redo","length","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/indrajeetyadav/my-spreadsheet/src/hooks/useSpreadsheet.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\nconst SpreadsheetContext = createContext();\n\nexport const useSpreadsheet = () => useContext(SpreadsheetContext);\n\nexport const SpreadsheetProvider = ({ children }) => {\n  const [cells, setCells] = useState({});\n  const [history, setHistory] = useState([]);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const updateCell = useCallback((cellId, updates) => {\n    setCells(prevCells => {\n      const newCells = { ...prevCells, [cellId]: { ...prevCells[cellId], ...updates } };\n      setHistory(prevHistory => [...prevHistory.slice(0, currentHistoryIndex + 1), newCells]);\n      setCurrentHistoryIndex(prevIndex => prevIndex + 1);\n      return newCells;\n    });\n  }, [currentHistoryIndex]);\n\n  const formatCell = useCallback((property, value) => {\n    setCells(prevCells => {\n      const newCells = { ...prevCells };\n      Object.keys(newCells).forEach(cellId => {\n        if (newCells[cellId].selected) {\n          newCells[cellId] = {\n            ...newCells[cellId],\n            style: { ...newCells[cellId].style, [property]: value }\n          };\n        }\n      });\n      setHistory(prevHistory => [...prevHistory.slice(0, currentHistoryIndex + 1), newCells]);\n      setCurrentHistoryIndex(prevIndex => prevIndex + 1);\n      return newCells;\n    });\n  }, [currentHistoryIndex]);\n\n  const setColumnRule = useCallback((column, rule) => {\n    setCells(prevCells => {\n      const newCells = { ...prevCells };\n      Object.keys(newCells).forEach(cellId => {\n        if (cellId.startsWith(column)) {\n          newCells[cellId] = {\n            ...newCells[cellId],\n            validation: rule,\n          };\n        }\n      });\n      setHistory(prevHistory => [...prevHistory.slice(0, currentHistoryIndex + 1), newCells]);\n      setCurrentHistoryIndex(prevIndex => prevIndex + 1);\n      return newCells;\n    });\n  }, [currentHistoryIndex]);\n\n  const undo = useCallback(() => {\n    if (currentHistoryIndex > 0) {\n      setCurrentHistoryIndex(prevIndex => prevIndex - 1);\n      setCells(history[currentHistoryIndex - 1]);\n    }\n  }, [currentHistoryIndex, history]);\n\n  const redo = useCallback(() => {\n    if (currentHistoryIndex < history.length - 1) {\n      setCurrentHistoryIndex(prevIndex => prevIndex + 1);\n      setCells(history[currentHistoryIndex + 1]);\n    }\n  }, [currentHistoryIndex, history]);\n\n  const value = {\n    cells,\n    updateCell,\n    formatCell,\n    undo,\n    redo,\n    searchTerm,\n    setSearchTerm,\n    setColumnRule\n  };\n\n  return (\n    <SpreadsheetContext.Provider value={value}>\n      {children}\n    </SpreadsheetContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}