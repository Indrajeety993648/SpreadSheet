{"ast":null,"code":"var _jsxFileName = \"/home/indrajeetyadav/my-spreadsheet/src/components/Toolbar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = () => {\n  _s();\n  const {\n    formatCell,\n    searchTerm,\n    setSearchTerm,\n    setColumnRule\n  } = useSpreadsheet();\n  const handleFormatChange = (property, value) => {\n    formatCell(property, value);\n  };\n  const handleColumnRuleChange = e => {\n    const column = e.target.value;\n    setColumnRule(column, 'numeric');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 p-2 flex space-x-2 items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleFormatChange('fontWeight', e.target.value),\n      className: \"bg-white border border-gray-300 rounded px-2 py-1 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"normal\",\n        children: \"Normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"bold\",\n        children: \"Bold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleFormatChange('textAlign', e.target.value),\n      className: \"bg-white border border-gray-300 rounded px-2 py-1 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"left\",\n        children: \"Align Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"center\",\n        children: \"Align Center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"right\",\n        children: \"Align Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleColumnRuleChange,\n      className: \"bg-white border border-gray-300 rounded px-2 py-1 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Set Numeric Column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), Array.from({\n        length: 26\n      }, (_, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: String.fromCharCode(65 + i),\n        children: [\"Column \", String.fromCharCode(65 + i)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Toolbar, \"FeazgW5Zxwq/pCIckG3+RV9zsyY=\", false, function () {\n  return [useSpreadsheet];\n});\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","useSpreadsheet","jsxDEV","_jsxDEV","Toolbar","_s","formatCell","searchTerm","setSearchTerm","setColumnRule","handleFormatChange","property","value","handleColumnRuleChange","e","column","target","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","i","String","fromCharCode","_c","$RefreshReg$"],"sources":["/home/indrajeetyadav/my-spreadsheet/src/components/Toolbar.js"],"sourcesContent":["import React from 'react';\nimport { useSpreadsheet } from '../hooks/useSpreadsheet';\n\nconst Toolbar = () => {\n  const { formatCell, searchTerm, setSearchTerm, setColumnRule } = useSpreadsheet();\n\n  const handleFormatChange = (property, value) => {\n    formatCell(property, value);\n  };\n\n  const handleColumnRuleChange = (e) => {\n    const column = e.target.value;\n    setColumnRule(column, 'numeric');\n  };\n\n  return (\n    <div className=\"bg-gray-100 p-2 flex space-x-2 items-center\">\n      <select \n        onChange={(e) => handleFormatChange('fontWeight', e.target.value)} \n        className=\"bg-white border border-gray-300 rounded px-2 py-1 text-sm\"\n      >\n        <option value=\"normal\">Normal</option>\n        <option value=\"bold\">Bold</option>\n      </select>\n  \n      <select \n        onChange={(e) => handleFormatChange('textAlign', e.target.value)}\n        className=\"bg-white border border-gray-300 rounded px-2 py-1 text-sm\"\n      >\n        <option value=\"left\">Align Left</option>\n        <option value=\"center\">Align Center</option>\n        <option value=\"right\">Align Right</option>\n      </select>\n      <select\n        onChange={handleColumnRuleChange}\n        className=\"bg-white border border-gray-300 rounded px-2 py-1 text-sm\"\n      >\n        <option value=\"\">Set Numeric Column</option>\n        {Array.from({ length: 26 }, (_, i) => (\n          <option key={i} value={String.fromCharCode(65 + i)}>\n            Column {String.fromCharCode(65 + i)}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Toolbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}